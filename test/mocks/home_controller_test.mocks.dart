// Mocks generated by Mockito 5.0.14 from annotations
// in asdshop/test/home_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:asdshop/app/models/category.dart' as _i10;
import 'package:asdshop/app/models/error.dart' as _i5;
import 'package:asdshop/app/models/product.dart' as _i8;
import 'package:asdshop/app/models/shopping.dart' as _i9;
import 'package:asdshop/app/models/user.dart' as _i6;
import 'package:asdshop/app/resources/home_resource.dart' as _i7;
import 'package:asdshop/app/resources/main_resource.dart' as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [MainResource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainResource extends _i1.Mock implements _i3.MainResource {
  MockMainResource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AsdError, String>> login(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(Invocation.method(#login, [body]),
              returnValue: Future<_i2.Either<_i5.AsdError, String>>.value(
                  _FakeEither_0<_i5.AsdError, String>()))
          as _i4.Future<_i2.Either<_i5.AsdError, String>>);
  @override
  _i4.Future<_i2.Either<_i5.AsdError, String>> register(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(Invocation.method(#register, [body]),
              returnValue: Future<_i2.Either<_i5.AsdError, String>>.value(
                  _FakeEither_0<_i5.AsdError, String>()))
          as _i4.Future<_i2.Either<_i5.AsdError, String>>);
  @override
  _i4.Future<_i2.Either<_i5.AsdError, _i6.User>> getDataUser() =>
      (super.noSuchMethod(Invocation.method(#getDataUser, []),
              returnValue: Future<_i2.Either<_i5.AsdError, _i6.User>>.value(
                  _FakeEither_0<_i5.AsdError, _i6.User>()))
          as _i4.Future<_i2.Either<_i5.AsdError, _i6.User>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [HomeResource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeResource extends _i1.Mock implements _i7.HomeResource {
  MockHomeResource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.AsdError, List<_i8.Product>>> getListProducts() =>
      (super.noSuchMethod(Invocation.method(#getListProducts, []),
              returnValue:
                  Future<_i2.Either<_i5.AsdError, List<_i8.Product>>>.value(
                      _FakeEither_0<_i5.AsdError, List<_i8.Product>>()))
          as _i4.Future<_i2.Either<_i5.AsdError, List<_i8.Product>>>);
  @override
  _i4.Future<_i2.Either<_i5.AsdError, List<_i9.Shopping>>> getListShopping() =>
      (super.noSuchMethod(Invocation.method(#getListShopping, []),
              returnValue:
                  Future<_i2.Either<_i5.AsdError, List<_i9.Shopping>>>.value(
                      _FakeEither_0<_i5.AsdError, List<_i9.Shopping>>()))
          as _i4.Future<_i2.Either<_i5.AsdError, List<_i9.Shopping>>>);
  @override
  _i4.Future<_i2.Either<_i5.AsdError, List<_i10.Category>>> getListCategory() =>
      (super.noSuchMethod(Invocation.method(#getListCategory, []),
              returnValue:
                  Future<_i2.Either<_i5.AsdError, List<_i10.Category>>>.value(
                      _FakeEither_0<_i5.AsdError, List<_i10.Category>>()))
          as _i4.Future<_i2.Either<_i5.AsdError, List<_i10.Category>>>);
  @override
  _i4.Future<_i2.Either<_i5.AsdError, String>> saveShopping(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(Invocation.method(#saveShopping, [body]),
              returnValue: Future<_i2.Either<_i5.AsdError, String>>.value(
                  _FakeEither_0<_i5.AsdError, String>()))
          as _i4.Future<_i2.Either<_i5.AsdError, String>>);
  @override
  _i4.Future<_i2.Either<_i5.AsdError, _i8.Product>> saveProduct(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(Invocation.method(#saveProduct, [body]),
              returnValue: Future<_i2.Either<_i5.AsdError, _i8.Product>>.value(
                  _FakeEither_0<_i5.AsdError, _i8.Product>()))
          as _i4.Future<_i2.Either<_i5.AsdError, _i8.Product>>);
  @override
  String toString() => super.toString();
}
